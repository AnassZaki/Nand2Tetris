// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    Register(in=in, load=a1, out=register0);
    Register(in=in, load=b1, out=register1);
    Register(in=in, load=c1, out=register2);
    Register(in=in, load=d1, out=register3);
    Register(in=in, load=e1, out=register4);
    Register(in=in, load=f1, out=register5);
    Register(in=in, load=g1, out=register6);
    Register(in=in, load=h1, out=register7);
    DMux8Way(in=load, sel=address[0..2], a=a1, b=b1, c=c1, d=d1, e=e1, f=f1, g=g1, h=h1);
    Mux8Way16(a=register0, b=register1, c=register2, d=register3, e=register4, f=register5, g=register6, h=register7, sel=address[0..2], out=out);
}